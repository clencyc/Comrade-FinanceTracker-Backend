--
-- PostgreSQL database dump
--

-- Dumped from database version 17.2
-- Dumped by pg_dump version 17.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: MpesaAPI_mpesatransaction; Type: TABLE; Schema: public; Owner: user1
--

CREATE TABLE public."MpesaAPI_mpesatransaction" (
    id bigint NOT NULL,
    transaction_id character varying(100) NOT NULL,
    amount numeric(10,2) NOT NULL,
    category character varying(100),
    description text NOT NULL,
    transaction_date timestamp with time zone NOT NULL
);


ALTER TABLE public."MpesaAPI_mpesatransaction" OWNER TO user1;

--
-- Name: MpesaAPI_mpesatransaction_id_seq; Type: SEQUENCE; Schema: public; Owner: user1
--

ALTER TABLE public."MpesaAPI_mpesatransaction" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."MpesaAPI_mpesatransaction_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: api_budget; Type: TABLE; Schema: public; Owner: user1
--

CREATE TABLE public.api_budget (
    id bigint NOT NULL,
    category character varying(50) NOT NULL,
    "limit" numeric(10,2) NOT NULL,
    start_date date NOT NULL,
    end_date date NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.api_budget OWNER TO user1;

--
-- Name: api_budget_id_seq; Type: SEQUENCE; Schema: public; Owner: user1
--

ALTER TABLE public.api_budget ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.api_budget_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: api_dailysavings; Type: TABLE; Schema: public; Owner: user1
--

CREATE TABLE public.api_dailysavings (
    id bigint NOT NULL,
    amount_saved numeric(10,2) NOT NULL,
    date date NOT NULL,
    savings_goal_id bigint NOT NULL
);


ALTER TABLE public.api_dailysavings OWNER TO user1;

--
-- Name: api_dailysavings_id_seq; Type: SEQUENCE; Schema: public; Owner: user1
--

ALTER TABLE public.api_dailysavings ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.api_dailysavings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: api_expense; Type: TABLE; Schema: public; Owner: user1
--

CREATE TABLE public.api_expense (
    id bigint NOT NULL,
    amount numeric(10,2) NOT NULL,
    category character varying(50) NOT NULL,
    description text,
    date date NOT NULL
);


ALTER TABLE public.api_expense OWNER TO user1;

--
-- Name: api_expense_id_seq; Type: SEQUENCE; Schema: public; Owner: user1
--

ALTER TABLE public.api_expense ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.api_expense_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: api_financialbook; Type: TABLE; Schema: public; Owner: user1
--

CREATE TABLE public.api_financialbook (
    id bigint NOT NULL,
    title character varying(255) NOT NULL,
    author character varying(255) NOT NULL,
    description text NOT NULL,
    genre character varying(100) NOT NULL,
    difficulty_level character varying(50) NOT NULL,
    rating numeric(3,2) NOT NULL,
    cover_image character varying(100),
    created_at timestamp with time zone NOT NULL
);


ALTER TABLE public.api_financialbook OWNER TO user1;

--
-- Name: api_financialbook_id_seq; Type: SEQUENCE; Schema: public; Owner: user1
--

ALTER TABLE public.api_financialbook ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.api_financialbook_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: api_savingsgoal; Type: TABLE; Schema: public; Owner: user1
--

CREATE TABLE public.api_savingsgoal (
    id bigint NOT NULL,
    goal character varying(255) NOT NULL,
    target_amount numeric(10,2) NOT NULL,
    current_amount numeric(10,2) NOT NULL,
    start_date date NOT NULL,
    end_date date NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.api_savingsgoal OWNER TO user1;

--
-- Name: api_savingsgoal_id_seq; Type: SEQUENCE; Schema: public; Owner: user1
--

ALTER TABLE public.api_savingsgoal ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.api_savingsgoal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: api_transaction; Type: TABLE; Schema: public; Owner: user1
--

CREATE TABLE public.api_transaction (
    id bigint NOT NULL,
    receipt_no character varying(255) NOT NULL,
    completion_time timestamp with time zone NOT NULL,
    details character varying(500) NOT NULL,
    transaction_status character varying(50) NOT NULL,
    paid_in numeric(10,2) NOT NULL,
    withdrawn numeric(10,2) NOT NULL,
    balance numeric(12,2) NOT NULL,
    category character varying(250)
);


ALTER TABLE public.api_transaction OWNER TO user1;

--
-- Name: api_transaction_id_seq; Type: SEQUENCE; Schema: public; Owner: user1
--

ALTER TABLE public.api_transaction ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.api_transaction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: user1
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO user1;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: user1
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: user1
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO user1;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: user1
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: user1
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO user1;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: user1
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: user1
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO user1;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: user1
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO user1;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: user1
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: user1
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: user1
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO user1;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: user1
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: user1
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO user1;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: user1
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: user1
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO user1;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: user1
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: user1
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO user1;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: user1
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: user1
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO user1;

--
-- Data for Name: MpesaAPI_mpesatransaction; Type: TABLE DATA; Schema: public; Owner: user1
--

COPY public."MpesaAPI_mpesatransaction" (id, transaction_id, amount, category, description, transaction_date) FROM stdin;
\.


--
-- Data for Name: api_budget; Type: TABLE DATA; Schema: public; Owner: user1
--

COPY public.api_budget (id, category, "limit", start_date, end_date, user_id) FROM stdin;
\.


--
-- Data for Name: api_dailysavings; Type: TABLE DATA; Schema: public; Owner: user1
--

COPY public.api_dailysavings (id, amount_saved, date, savings_goal_id) FROM stdin;
\.


--
-- Data for Name: api_expense; Type: TABLE DATA; Schema: public; Owner: user1
--

COPY public.api_expense (id, amount, category, description, date) FROM stdin;
\.


--
-- Data for Name: api_financialbook; Type: TABLE DATA; Schema: public; Owner: user1
--

COPY public.api_financialbook (id, title, author, description, genre, difficulty_level, rating, cover_image, created_at) FROM stdin;
1	The Richest Man in Babylon	George S. Clason	A collection of parables on financial wisdom and wealth-building.	Personal Finance	Beginner	4.50		2025-02-08 13:10:39+03
34	One Up On Wall Street	Peter Lynch	Lessons on stock market investing from a legendary investor.	Investing	Intermediate	4.60	book_covers/wallstrees.jpeg	2025-02-08 13:35:31+03
35	A Random Walk Down Wall Street	Burton G. Malkiel	Guide to stock market investing and strategies.	Investing	Advanced	4.21	book_covers/walkdown.jpeg	2025-02-08 13:40:20+03
36	The Millionaire Next Door	Thomas J. Stanley & William D. Danko	Research on how everyday people become millionaires.	Personal Finance	Intermediate	4.50	book_covers/next_door.jpeg	2025-02-08 13:41:22+03
37	Think and Grow Rich	Napoleon Hill	Success principles and wealth-building mindset strategies.	Wealth Mindset	Beginner	4.40	book_covers/thinknGrow.jpeg	2025-02-08 13:42:28+03
38	The Psychology of Money	Morgan Housel	Insights on how people think and behave with money.	Behavioral Finance	Beginner	4.64	book_covers/phycology.png	2025-02-08 13:43:27+03
39	Your Money or Your Life	Vicki Robin & Joe Dominguez	A step-by-step guide to transforming your relationship with money.	Financial Independence	Intermediate	4.60	book_covers/monayorLiffe.png	2025-02-08 13:45:26+03
40	The Intelligent Investor	Benjamin Graham	A fundamental guide to value investing and long-term wealth building	Investing	Advanced	4.70	book_covers/intelligent.png	2025-02-08 13:46:28+03
41	Example Book Title	Unknown	For beginners interested in investing, I recommend starting with these books, which offer a good balance of simplicity, practicality, and foundational knowledge:\n\n**Focusing on the Basics & Mindset:**\n\n* **"The Psychology of Money" by Morgan Housel:** This isn't strictly about *how* to invest, but it's crucial.  It focuses on the behavioral aspects of investing, helping you understand your relationship with money and avoid common emotional pitfalls.  Essential reading before diving into specific investment strategies.\n* **"Broke Millennial Takes on Investing" by Erin Lowry:**  Specifically geared towards millennials, but the principles are applicable to anyone new to investing.  It's relatable, approachable, and covers basic concepts in an easy-to-understand way.\n* **"Investing for Dummies" by Eric Tyson:**  Part of a well-respected series, this book provides a broad overview of various investment options and strategies, explained in a simple, non-technical manner.  It's a good starting point for covering the basics.\n\n\n**Focusing on Specific Investment Strategies (slightly more advanced, but still beginner-friendly):**\n\n* **"The Simple Path to Wealth" by JL Collins:**  This book advocates a simple, low-cost index fund investing strategy, perfect for beginners who want a straightforward approach.  It emphasizes long-term investing and minimizing fees.\n* **"A Random Walk Down Wall Street" by Burton Malkiel:**  A classic that explains the efficient market hypothesis and the benefits of passive investing, like index funds. While a bit more academic than the others, it's still digestible for beginners and presents a compelling case for a low-cost, long-term approach.  (Note: newer editions are preferred to keep up with market changes).\n\n\n**Important Note:**  These books provide a starting point. Investing involves risk, and it's crucial to conduct your own research and, if needed, consult a qualified financial advisor before making any investment decisions.  No book can replace professional advice tailored to your specific circumstances.\n\n\nStart with one or two from the "Focusing on the Basics & Mindset" section to build a solid foundation. Then, you can move on to the strategy-focused books to explore how to put your knowledge into practice. Remember to always prioritize understanding the risks before investing your money.	I want beginner-level books on investing	Beginner	5.00		2025-02-10 16:17:27.591538+03
42	Example Book Title	Unknown	For beginners interested in investing, I recommend starting with books that focus on building a solid foundation of understanding before diving into complex strategies.  Here are a few suggestions, categorized for easier selection:\n\n**For a broad overview and foundational knowledge:**\n\n* **"The Simple Path to Wealth" by JL Collins:** This book emphasizes index fund investing, a low-cost, relatively simple strategy suitable for beginners. It's written in a clear, easy-to-understand style.  Excellent starting point.\n* **"Broke Millennial Takes on Investing" by Erin Lowry:**  A great option if you're a millennial or Gen Z investor.  It tackles investing anxieties and explains basic concepts in a relatable way.  Focuses on building wealth gradually.\n* **"The Psychology of Money" by Morgan Housel:** While not strictly an investing how-to book, it's crucial for beginners.  It explores the behavioral aspects of finance, helping you understand your own relationship with money and avoid common pitfalls.  Highly recommended, even *before* learning specific investing strategies.\n\n\n**For a slightly more in-depth look at specific investment types:**\n\n* **"A Random Walk Down Wall Street" by Burton Malkiel:** A classic that explains the efficient market hypothesis and the benefits of passive investing (like index funds).  It might be slightly more challenging than the others listed, but still accessible to beginners.\n* **"The Little Book of Common Sense Investing" by John C. Bogle:**  Another strong advocate for index fund investing, this book offers a concise and practical guide to building a diversified portfolio.\n\n\n**Important Considerations When Choosing:**\n\n* **Your Learning Style:** Some books are more narrative-driven, while others are more technical. Choose a style that suits you.\n* **Your Investment Goals:** Are you saving for retirement, a down payment on a house, or something else?  Understanding your goals will help you choose the right approach.\n* **Your Risk Tolerance:**  Beginners often start with lower-risk investments.  The books above generally lean towards this approach.\n\n\n**After reading one or two of these books:**  You'll be in a much better position to research specific investment vehicles (like ETFs or individual stocks) and decide which strategies are right for you.  Don't feel pressured to learn everything at once; start with the basics and build your knowledge gradually.  Remember to consult with a qualified financial advisor before making any significant investment decisions.	I want beginner-level books on investing	Beginner	5.00		2025-02-10 16:17:28.761584+03
43	Example Book Title	Unknown	For a beginner looking to learn about investing, I recommend starting with these books, categorized for easier selection based on your learning style:\n\n**For a straightforward, practical approach:**\n\n* **"The Little Book of Common Sense Investing" by John C. Bogle:** This book advocates for a low-cost, index fund investing strategy. It's simple, clear, and highly regarded for its practicality.  Excellent for those wanting a hands-off, long-term approach.\n\n* **"The Simple Path to Wealth" by JL Collins:**  Similar to Bogle's book, this one emphasizes a low-cost index fund strategy but presents it in a more narrative and engaging style.  A good choice if you prefer a less technical explanation.\n\n* **"Broke Millennial Takes on Investing" by Erin Lowry:**  This book is specifically geared towards younger investors and tackles common anxieties and misconceptions about investing in an accessible way.  Great for those who feel overwhelmed by the topic.\n\n\n**For a more comprehensive, but still beginner-friendly, overview:**\n\n* **"Investing for Dummies" by Eric Tyson:**  Part of the popular "For Dummies" series, this book provides a broad introduction to various investment topics, from stocks and bonds to mutual funds and retirement planning.  It's a good starting point to get a general understanding of the different options available.\n\n\n**For a focus on building good financial habits before investing:**\n\n* **"I Will Teach You To Be Rich" by Ramit Sethi:** While not solely focused on investing, this book emphasizes building a solid financial foundation – budgeting, paying off debt, and automating savings – before venturing into investments.  Crucial for establishing a strong base before investing.\n\n\n**Important Considerations Before Starting:**\n\n* **Your Investment Goals:** Before diving into these books, consider *why* you want to invest. Are you saving for retirement, a down payment on a house, or something else?  Understanding your goals will help you choose the most appropriate investment strategy.\n* **Your Risk Tolerance:**  Investing always involves some level of risk.  Be honest with yourself about how much risk you're comfortable taking.  Beginner books often advocate for lower-risk strategies, but it's crucial to understand your own comfort level.\n* **Your Time Horizon:**  How long do you plan to invest your money?  Longer time horizons generally allow for greater risk-taking.\n\n\nStart with one book from the list that appeals to your learning style and then gradually explore others as your knowledge grows.  Remember that investing involves learning continuously, so don't be afraid to seek out additional resources and seek professional advice if needed.	I want beginner-level books on investing	Beginner	5.00		2025-02-10 16:17:30.90217+03
\.


--
-- Data for Name: api_savingsgoal; Type: TABLE DATA; Schema: public; Owner: user1
--

COPY public.api_savingsgoal (id, goal, target_amount, current_amount, start_date, end_date, user_id) FROM stdin;
1	1200	45000.00	200.00	2025-02-08	2025-02-15	1
2	Saving for a play store account	1200.00	230.00	2025-02-08	2025-02-28	1
\.


--
-- Data for Name: api_transaction; Type: TABLE DATA; Schema: public; Owner: user1
--

COPY public.api_transaction (id, receipt_no, completion_time, details, transaction_status, paid_in, withdrawn, balance, category) FROM stdin;
1	RCPT7890	2025-02-08 15:30:00+03	Merchant Payment to Supermarket	Completed	1000.00	0.00	5000.00	Shopping
2	RCPT7891	2025-02-08 15:35:00+03	Payment to ABC Store	Completed	1500.00	0.00	6000.00	Shopping
\.


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: user1
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: user1
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: user1
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add user	4	add_user
14	Can change user	4	change_user
15	Can delete user	4	delete_user
16	Can view user	4	view_user
17	Can add content type	5	add_contenttype
18	Can change content type	5	change_contenttype
19	Can delete content type	5	delete_contenttype
20	Can view content type	5	view_contenttype
21	Can add session	6	add_session
22	Can change session	6	change_session
23	Can delete session	6	delete_session
24	Can view session	6	view_session
25	Can add budget	7	add_budget
26	Can change budget	7	change_budget
27	Can delete budget	7	delete_budget
28	Can view budget	7	view_budget
29	Can add expense	8	add_expense
30	Can change expense	8	change_expense
31	Can delete expense	8	delete_expense
32	Can view expense	8	view_expense
33	Can add savings goal	9	add_savingsgoal
34	Can change savings goal	9	change_savingsgoal
35	Can delete savings goal	9	delete_savingsgoal
36	Can view savings goal	9	view_savingsgoal
37	Can add financial book	10	add_financialbook
38	Can change financial book	10	change_financialbook
39	Can delete financial book	10	delete_financialbook
40	Can view financial book	10	view_financialbook
41	Can add mpesa transaction	11	add_mpesatransaction
42	Can change mpesa transaction	11	change_mpesatransaction
43	Can delete mpesa transaction	11	delete_mpesatransaction
44	Can view mpesa transaction	11	view_mpesatransaction
45	Can add transaction	12	add_transaction
46	Can change transaction	12	change_transaction
47	Can delete transaction	12	delete_transaction
48	Can view transaction	12	view_transaction
49	Can add daily savings	13	add_dailysavings
50	Can change daily savings	13	change_dailysavings
51	Can delete daily savings	13	delete_dailysavings
52	Can view daily savings	13	view_dailysavings
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: user1
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
1	pbkdf2_sha256$870000$dtL8L0s5D5Ljr39og8gonq$uKnxnkHUFk2av9v8ENhK+uyevHfDQbV534JKJ2Rej28=	2025-02-08 13:09:47.155176+03	t	clencyc			clency@gmail.com	t	t	2025-02-07 15:39:16.776465+03
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: user1
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: user1
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: user1
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2025-02-08 13:10:34.297277+03	2	Saving for a play store account	1	[{"added": {}}]	9	1
2	2025-02-08 13:21:33.266324+03	1	The Richest Man in Babylon	1	[{"added": {}}]	10	1
35	2025-02-08 13:37:08.91303+03	34	One Up On Wall Street	1	[{"added": {}}]	10	1
36	2025-02-08 13:40:15.541743+03	34	One Up On Wall Street	2	[{"changed": {"fields": ["Cover image"]}}]	10	1
37	2025-02-08 13:41:20.71737+03	35	A Random Walk Down Wall Street	1	[{"added": {}}]	10	1
38	2025-02-08 13:42:26.496852+03	36	The Millionaire Next Door	1	[{"added": {}}]	10	1
39	2025-02-08 13:43:25.261406+03	37	Think and Grow Rich	1	[{"added": {}}]	10	1
40	2025-02-08 13:45:09.002747+03	38	The Psychology of Money	1	[{"added": {}}]	10	1
41	2025-02-08 13:46:26.094126+03	39	Your Money or Your Life	1	[{"added": {}}]	10	1
42	2025-02-08 13:47:42.537405+03	40	The Intelligent Investor	1	[{"added": {}}]	10	1
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: user1
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	auth	user
5	contenttypes	contenttype
6	sessions	session
7	api	budget
8	api	expense
9	api	savingsgoal
10	api	financialbook
11	MpesaAPI	mpesatransaction
12	api	transaction
13	api	dailysavings
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: user1
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2025-02-06 12:50:21.249053+03
2	auth	0001_initial	2025-02-06 12:50:21.339298+03
3	admin	0001_initial	2025-02-06 12:50:21.360884+03
4	admin	0002_logentry_remove_auto_add	2025-02-06 12:50:21.379938+03
5	admin	0003_logentry_add_action_flag_choices	2025-02-06 12:50:21.395491+03
7	api	0002_financialbook	2025-02-06 12:50:21.496646+03
8	api	0003_financialbook_created_at_and_more	2025-02-06 12:50:21.509472+03
9	contenttypes	0002_remove_content_type_name	2025-02-06 12:50:21.54531+03
10	auth	0002_alter_permission_name_max_length	2025-02-06 12:50:21.577205+03
11	auth	0003_alter_user_email_max_length	2025-02-06 12:50:21.604+03
12	auth	0004_alter_user_username_opts	2025-02-06 12:50:21.62862+03
13	auth	0005_alter_user_last_login_null	2025-02-06 12:50:21.661149+03
14	auth	0006_require_contenttypes_0002	2025-02-06 12:50:21.663134+03
15	auth	0007_alter_validators_add_error_messages	2025-02-06 12:50:21.691873+03
16	auth	0008_alter_user_username_max_length	2025-02-06 12:50:21.722617+03
17	auth	0009_alter_user_last_name_max_length	2025-02-06 12:50:21.754446+03
18	auth	0010_alter_group_name_max_length	2025-02-06 12:50:21.779412+03
19	auth	0011_update_proxy_permissions	2025-02-06 12:50:21.81142+03
20	auth	0012_alter_user_first_name_max_length	2025-02-06 12:50:21.841862+03
21	sessions	0001_initial	2025-02-06 12:50:21.855798+03
22	api	0004_alter_financialbook_published_date	2025-02-06 13:41:10.64408+03
23	MpesaAPI	0001_initial	2025-02-06 14:55:20.054547+03
24	api	0005_remove_expense_user	2025-02-07 15:27:38.408283+03
25	api	0006_transaction	2025-02-08 10:10:51.520716+03
26	api	0007_alter_transaction_description	2025-02-08 10:16:07.887107+03
27	api	0008_remove_transaction_category	2025-02-08 10:18:14.091402+03
28	api	0009_transaction_category	2025-02-08 10:23:45.700731+03
29	api	0010_alter_transaction_category	2025-02-08 10:29:39.80517+03
30	api	0011_alter_transaction_description	2025-02-08 10:31:51.406781+03
31	api	0001_initial	2025-02-08 12:22:12.998859+03
32	api	0002_dailysavings	2025-02-08 12:53:24.094498+03
33	api	0003_remove_financialbook_published_date	2025-02-08 13:39:47.605943+03
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: user1
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
gdiivnro3hykd1u1808gvkcu3oi9jlux	.eJxVjMsOgjAQRf-la9NYWjuMS_d8QzOPVlADCYWV8d-FhIVu7znnvk2idenTWvOcBjVX48zpd2OSZx53oA8a75OVaVzmge2u2INW202aX7fD_TvoqfZbfc4krlFoPYaCzHQBbQC1YYQQtaB4hhLYRY9FGEVUfQzQbjTEFsznC_QoN_0:1tgNdz:1KLpOnjbHavqksob6bLjH-xrOW4cNB_s-bd2MjFdcUs	2025-02-21 15:39:39.609772+03
zayytxki3pxysjvxfgtqcub7msvkh7n7	.eJxVjMsOgjAQRf-la9NYWjuMS_d8QzOPVlADCYWV8d-FhIVu7znnvk2idenTWvOcBjVX48zpd2OSZx53oA8a75OVaVzmge2u2INW202aX7fD_TvoqfZbfc4krlFoPYaCzHQBbQC1YYQQtaB4hhLYRY9FGEVUfQzQbjTEFsznC_QoN_0:1tghmV:XYQlC5k9f_983i70aJd0bbNgZo-cM3-3KXKwor9YP6Y	2025-02-22 13:09:47.158238+03
\.


--
-- Name: MpesaAPI_mpesatransaction_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user1
--

SELECT pg_catalog.setval('public."MpesaAPI_mpesatransaction_id_seq"', 1, true);


--
-- Name: api_budget_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user1
--

SELECT pg_catalog.setval('public.api_budget_id_seq', 1, false);


--
-- Name: api_dailysavings_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user1
--

SELECT pg_catalog.setval('public.api_dailysavings_id_seq', 1, false);


--
-- Name: api_expense_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user1
--

SELECT pg_catalog.setval('public.api_expense_id_seq', 1, false);


--
-- Name: api_financialbook_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user1
--

SELECT pg_catalog.setval('public.api_financialbook_id_seq', 43, true);


--
-- Name: api_savingsgoal_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user1
--

SELECT pg_catalog.setval('public.api_savingsgoal_id_seq', 2, true);


--
-- Name: api_transaction_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user1
--

SELECT pg_catalog.setval('public.api_transaction_id_seq', 2, true);


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user1
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user1
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user1
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 52, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user1
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user1
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 1, true);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user1
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user1
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 42, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user1
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 13, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user1
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 33, true);


--
-- Name: MpesaAPI_mpesatransaction MpesaAPI_mpesatransaction_pkey; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public."MpesaAPI_mpesatransaction"
    ADD CONSTRAINT "MpesaAPI_mpesatransaction_pkey" PRIMARY KEY (id);


--
-- Name: MpesaAPI_mpesatransaction MpesaAPI_mpesatransaction_transaction_id_key; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public."MpesaAPI_mpesatransaction"
    ADD CONSTRAINT "MpesaAPI_mpesatransaction_transaction_id_key" UNIQUE (transaction_id);


--
-- Name: api_budget api_budget_pkey; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.api_budget
    ADD CONSTRAINT api_budget_pkey PRIMARY KEY (id);


--
-- Name: api_dailysavings api_dailysavings_pkey; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.api_dailysavings
    ADD CONSTRAINT api_dailysavings_pkey PRIMARY KEY (id);


--
-- Name: api_expense api_expense_pkey; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.api_expense
    ADD CONSTRAINT api_expense_pkey PRIMARY KEY (id);


--
-- Name: api_financialbook api_financialbook_pkey; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.api_financialbook
    ADD CONSTRAINT api_financialbook_pkey PRIMARY KEY (id);


--
-- Name: api_savingsgoal api_savingsgoal_pkey; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.api_savingsgoal
    ADD CONSTRAINT api_savingsgoal_pkey PRIMARY KEY (id);


--
-- Name: api_transaction api_transaction_pkey; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.api_transaction
    ADD CONSTRAINT api_transaction_pkey PRIMARY KEY (id);


--
-- Name: api_transaction api_transaction_receipt_no_key; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.api_transaction
    ADD CONSTRAINT api_transaction_receipt_no_key UNIQUE (receipt_no);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: MpesaAPI_mpesatransaction_transaction_id_4462f711_like; Type: INDEX; Schema: public; Owner: user1
--

CREATE INDEX "MpesaAPI_mpesatransaction_transaction_id_4462f711_like" ON public."MpesaAPI_mpesatransaction" USING btree (transaction_id varchar_pattern_ops);


--
-- Name: api_budget_user_id_0da794a2; Type: INDEX; Schema: public; Owner: user1
--

CREATE INDEX api_budget_user_id_0da794a2 ON public.api_budget USING btree (user_id);


--
-- Name: api_dailysavings_savings_goal_id_5f105097; Type: INDEX; Schema: public; Owner: user1
--

CREATE INDEX api_dailysavings_savings_goal_id_5f105097 ON public.api_dailysavings USING btree (savings_goal_id);


--
-- Name: api_savingsgoal_user_id_19091649; Type: INDEX; Schema: public; Owner: user1
--

CREATE INDEX api_savingsgoal_user_id_19091649 ON public.api_savingsgoal USING btree (user_id);


--
-- Name: api_transaction_receipt_no_9596a897_like; Type: INDEX; Schema: public; Owner: user1
--

CREATE INDEX api_transaction_receipt_no_9596a897_like ON public.api_transaction USING btree (receipt_no varchar_pattern_ops);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: user1
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: user1
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: user1
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: user1
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: user1
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: user1
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: user1
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: user1
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: user1
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: user1
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: user1
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: user1
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: user1
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: api_budget api_budget_user_id_0da794a2_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.api_budget
    ADD CONSTRAINT api_budget_user_id_0da794a2_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_dailysavings api_dailysavings_savings_goal_id_5f105097_fk_api_savingsgoal_id; Type: FK CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.api_dailysavings
    ADD CONSTRAINT api_dailysavings_savings_goal_id_5f105097_fk_api_savingsgoal_id FOREIGN KEY (savings_goal_id) REFERENCES public.api_savingsgoal(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: api_savingsgoal api_savingsgoal_user_id_19091649_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.api_savingsgoal
    ADD CONSTRAINT api_savingsgoal_user_id_19091649_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: user1
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

